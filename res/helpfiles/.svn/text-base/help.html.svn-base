<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<style type="text/css">
<!--
body {
	background-color: #FFFFFF;
}
-->
</style></head>

<body>
<p>Welcome to DuDe </p>
<p>DuDe is a language independent tool for the detection of duplicate code. It's name is an acronym that stands for Duplication Detector. </p>
<p>It has two modes of use: </p>
<ul>
  <li>a standalone version, which can be controlled througha GUI (Graphical User Interface)</li>
  <li>integrated in a reengineering platform, called Insider, developed by LOOSE Research Group (http://loose.utt.ro)</li>
</ul>
<p>&nbsp;</p>
<h2>GUI</h2>
<p>The graphical user interface offers a simple, yet powerfull access to the duplication detecting engine. </p>
<p>  DuDe provides an all-in-one-window integrated workspace, composed by the controls panel, the parameters panel, a results panel and the status bar. The results panel is a vertical, adjustable heights split-panel, composed of a list of found duplication chains and a duplicate viewer.</p>
<p><img src="GUI.png" width="837" height="695"></p>
<p>The user can find duplicates according to the specified parameters in a specified starting directory (set path) and gets as a result a list of duplication chains (Duplication found panel). At this moment, the user can sort the results by many criteria (alfabetical sort of the files who participate, duplicated code size, duplication chain type etc.) and he can also visualize any of the duplication chains by clicking the corresponding item in the list. The two files involved in that specific duplication will be displayed in the Duplicate viewer panel, at the beginning of the duplicated code. The portions of code that represent the duplicated code will be highlighted in yellow. </p>
<p>The meanings of the different columns in the results table are:</p>
<p>where:</p>
<ul>
  <li>Reference File, Duplication File are the 2 files that share the duplicated code</li>
  <li>startLine and endLine are the line indexes in the 2 files where the duplicated code starts and ends</li>
  <li>Copied length is the number of copied lines</li>
  <li>Length in fileis the number of duplicated lines of code between the start line and the end line of the duplication. it is usually greater than the Copied length, because it may contain the noise that was rejected in the code cleaning phase, before the analization</li>
  <li>Type of the duplication chain is one of the following:
    <ul>
      <li>EXACT is the type of a duplication chain composed of a single exact chunk</li>
      <li>MODIFIED is the type of a duplication chain composed of N (N&gt;=2) exact chunks separated by N-1 modified lines of code</li>
      <li>INSERT  is the type of a duplication chain composed of N (N&gt;=2) exact chunks separated by N-1 inserted lines of code in the second file (the insert / delete problem is considered from the first file's point of view) </li>
      <li>DELETE is the type of a duplication chain composed of N (N&gt;=2) exact chunks separated by N-1 deleted lines of code in the second file (the insert / delete problem is considered from the first file's point of view) </li>
      <li>COMPOSED is the type of a duplication chain composed of N (N&gt;=2) exact chunks separated by N-1 inserted, deleted and modified lines of code (at least 2 of them)
        <ul>
          <ul>
            <li><img src="types.png" width="293" height="289"> </li>
          </ul>
        </ul>
      </li>
    </ul>
  </li>
  <li>structure is a chain of &lt;symbol&gt;&lt;size&gt; elements, where size represents the number of lines and the symbols can be: E (exact), M (modified), I (insert), D (delete). 
    <ul>
      <ul>
        <ul>
          <li><img src="structure.png" width="273" height="255"></li>
        </ul>
      </ul>
    </ul>
  </li>
</ul>
<p>&nbsp;</p>
<p>The user can also save the results of a searching operation in a specified file. The data will be saved in the exact order that the user left it, in a easy to follow , formatted way, including the date, the parameters and the starting path. </p>
<p> After every search operation, there are a couple of statistical information available about the last search.</p>
<p><img src="statistical.png" width="275" height="252"></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>At the bottom of the window, there is a status bar, where the user will be given information about operations (how many duplication chains were found during a searching operation, current starting path or saving results). </p>
<p>During an operation, which can take between a few miliseconds and tens of minutes (20 minutes for a 15.3 MB code, comments ignored), at the right bottom end of the screen there is a progress bar, which gives a hint about the how much of the whole operation has been left behind. </p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h3>Controls</h3>
<p>  Set path - sets the path where DuDe is starting its search<br>
  Save results - saves the list of duplication chains in a specified file<br>
  Find duplicates - starts searching for the duplicates according to the specified path and parameters<br>
  Statistics - gives some statistical information about the results of the last search operation <br>  
  Help - shows this file<br>
  About - version, author, date</p>
<p>&nbsp;</p>
<h3>Parameters</h3>
<ul>
  <li><strong>minLength</strong>: the minimum accepted size of a duplication chain (lines of copied code), defines a filter on the searching operation, so that only duplication chains with a size greater than minLength will be in the results list. </li>
  <li><strong>maxLineBias</strong>: the maximum line bias (number of modified, inserted or deleted lines) between 2 consecutive exact chunks within a duplication chain
    <ul>
      <li><img src="lineBias.png" width="255" height="237" align="absbottom"></li>
    </ul>
  </li>
  <li><strong>minExactChunk</strong>: the minimum exact chunk size (number of consecutive lines of copied code)
    <ul>
      <li><img src="exactChunk.png" width="264" height="237"></li>
    </ul>
  </li>
  <li><strong>ignoreComments</strong>: when selected, the engine will not take the comments into account (comments in C, C++ or Java style)</li>
</ul>
<p></p>
<p></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>Running inside the Insider </h2>
<p>From within Insider, DuDe can be used to search duplication chains starting with a list of method bodies. DuDe attaches the duplication entities (which are objects) to the methods and from there on, Insider can use the duplication data to calculate metrics based on the quantity of duplicated code and to further use it in its analyzing activities. </p>
<p><br>
</p>
</body>
</html>
